[ 객체지향 언어 ]
	* 장점
		- 재사용성 : 상속을 통해서 코드의 재사용을 높임
		- 생산성 향상 : 클래스 단위를 부품처럼 조립
		- 유지보수의 우수성
	* 단점
		- 객체를 세분화하여 설계
		- 실행 속도가 절차지향 언어 대비 느림
		- 상속으로 인한 관계가 많이 형성되면 코딩의 난이도가 높아짐

	* 절차 지향 언어에 객체 지향 언어가 속하지만 객체의 관계가 추가된 것
	
[ class ] 
	* 객체에 대하여 정의해놓은 틀, 설계도
[ object ] 객체
	* 클래스를 통해 구현 할 수 있는 모든 대상
		- 해당 클래스로 구현한 인스턴스를 대표함
[ instance ]
	* 객체가 실제로 구현된 것, 클래스의 인스턴스 



클래스
	
	
	
	
	
	
	
	
캡슐화






추상화 (데이터의 구조화)
	공통적인것이 많음. 추상적인 요소들을 묶어서 분류한 것